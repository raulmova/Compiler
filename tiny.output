State 48 conflicts: 1 shift/reduce


Grammar

    0 $accept: statement_list $end

    1 statement_list: program

    2 program: var_dec stmt_seq

    3 var_dec: var_dec single_dec
    4        | %empty

    5 single_dec: type ID SEMI

    6 type: INTEGER
    7     | FLOAT

    8 stmt_seq: stmt_seq stmt
    9         | %empty

   10 stmt: IF exp THEN stmt
   11     | IF exp THEN stmt ELSE stmt
   12     | WHILE exp DO stmt
   13     | variable ASSIGN exp SEMI
   14     | READ LPAREN variable RPAREN SEMI
   15     | WRITE LPAREN variable RPAREN SEMI
   16     | block

   17 block: LBRACE stmt_seq RBRACE

   18 exp: simple_exp LT simple_exp
   19    | simple_exp EQ simple_exp
   20    | simple_exp

   21 simple_exp: simple_exp PLUS term
   22           | simple_exp MINUS term
   23           | term

   24 term: term TIMES factor
   25     | term DIV factor
   26     | factor

   27 factor: LPAREN exp RPAREN
   28       | INT_NUM
   29       | FLOAT_NUM
   30       | variable

   31 variable: ID


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 5 31
SEMI (259) 5 13 14 15
INTEGER (260) 6
FLOAT (261) 7
IF (262) 10 11
THEN (263) 10 11
ELSE (264) 11
READ (265) 14
WRITE (266) 15
RPAREN (267) 14 15 27
LPAREN (268) 14 15 27
DO (269) 12
WHILE (270) 12
ASSIGN (271) 13
LBRACE (272) 17
RBRACE (273) 17
LT (274) 18
EQ (275) 19
PLUS (276) 21
MINUS (277) 22
TIMES (278) 24
DIV (279) 25
INT_NUM (280) 28
FLOAT_NUM (281) 29


Nonterminals, with rules where they appear

$accept (27)
    on left: 0
statement_list (28)
    on left: 1, on right: 0
program (29)
    on left: 2, on right: 1
var_dec (30)
    on left: 3 4, on right: 2 3
single_dec (31)
    on left: 5, on right: 3
type (32)
    on left: 6 7, on right: 5
stmt_seq (33)
    on left: 8 9, on right: 2 8 17
stmt (34)
    on left: 10 11 12 13 14 15 16, on right: 8 10 11 12
block (35)
    on left: 17, on right: 16
exp (36)
    on left: 18 19 20, on right: 10 11 12 13 27
simple_exp (37)
    on left: 21 22 23, on right: 18 19 20 21 22
term (38)
    on left: 24 25 26, on right: 21 22 23 24 25
factor (39)
    on left: 27 28 29 30, on right: 24 25 26
variable (40)
    on left: 31, on right: 13 14 15 30


State 0

    0 $accept: . statement_list $end

    $default  reduce using rule 4 (var_dec)

    statement_list  go to state 1
    program         go to state 2
    var_dec         go to state 3


State 1

    0 $accept: statement_list . $end

    $end  shift, and go to state 4


State 2

    1 statement_list: program .

    $default  reduce using rule 1 (statement_list)


State 3

    2 program: var_dec . stmt_seq
    3 var_dec: var_dec . single_dec

    INTEGER  shift, and go to state 5
    FLOAT    shift, and go to state 6

    $default  reduce using rule 9 (stmt_seq)

    single_dec  go to state 7
    type        go to state 8
    stmt_seq    go to state 9


State 4

    0 $accept: statement_list $end .

    $default  accept


State 5

    6 type: INTEGER .

    $default  reduce using rule 6 (type)


State 6

    7 type: FLOAT .

    $default  reduce using rule 7 (type)


State 7

    3 var_dec: var_dec single_dec .

    $default  reduce using rule 3 (var_dec)


State 8

    5 single_dec: type . ID SEMI

    ID  shift, and go to state 10


State 9

    2 program: var_dec stmt_seq .
    8 stmt_seq: stmt_seq . stmt

    ID      shift, and go to state 11
    IF      shift, and go to state 12
    READ    shift, and go to state 13
    WRITE   shift, and go to state 14
    WHILE   shift, and go to state 15
    LBRACE  shift, and go to state 16

    $default  reduce using rule 2 (program)

    stmt      go to state 17
    block     go to state 18
    variable  go to state 19


State 10

    5 single_dec: type ID . SEMI

    SEMI  shift, and go to state 20


State 11

   31 variable: ID .

    $default  reduce using rule 31 (variable)


State 12

   10 stmt: IF . exp THEN stmt
   11     | IF . exp THEN stmt ELSE stmt

    ID         shift, and go to state 11
    LPAREN     shift, and go to state 21
    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23

    exp         go to state 24
    simple_exp  go to state 25
    term        go to state 26
    factor      go to state 27
    variable    go to state 28


State 13

   14 stmt: READ . LPAREN variable RPAREN SEMI

    LPAREN  shift, and go to state 29


State 14

   15 stmt: WRITE . LPAREN variable RPAREN SEMI

    LPAREN  shift, and go to state 30


State 15

   12 stmt: WHILE . exp DO stmt

    ID         shift, and go to state 11
    LPAREN     shift, and go to state 21
    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23

    exp         go to state 31
    simple_exp  go to state 25
    term        go to state 26
    factor      go to state 27
    variable    go to state 28


State 16

   17 block: LBRACE . stmt_seq RBRACE

    $default  reduce using rule 9 (stmt_seq)

    stmt_seq  go to state 32


State 17

    8 stmt_seq: stmt_seq stmt .

    $default  reduce using rule 8 (stmt_seq)


State 18

   16 stmt: block .

    $default  reduce using rule 16 (stmt)


State 19

   13 stmt: variable . ASSIGN exp SEMI

    ASSIGN  shift, and go to state 33


State 20

    5 single_dec: type ID SEMI .

    $default  reduce using rule 5 (single_dec)


State 21

   27 factor: LPAREN . exp RPAREN

    ID         shift, and go to state 11
    LPAREN     shift, and go to state 21
    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23

    exp         go to state 34
    simple_exp  go to state 25
    term        go to state 26
    factor      go to state 27
    variable    go to state 28


State 22

   28 factor: INT_NUM .

    $default  reduce using rule 28 (factor)


State 23

   29 factor: FLOAT_NUM .

    $default  reduce using rule 29 (factor)


State 24

   10 stmt: IF exp . THEN stmt
   11     | IF exp . THEN stmt ELSE stmt

    THEN  shift, and go to state 35


State 25

   18 exp: simple_exp . LT simple_exp
   19    | simple_exp . EQ simple_exp
   20    | simple_exp .
   21 simple_exp: simple_exp . PLUS term
   22           | simple_exp . MINUS term

    LT     shift, and go to state 36
    EQ     shift, and go to state 37
    PLUS   shift, and go to state 38
    MINUS  shift, and go to state 39

    $default  reduce using rule 20 (exp)


State 26

   23 simple_exp: term .
   24 term: term . TIMES factor
   25     | term . DIV factor

    TIMES  shift, and go to state 40
    DIV    shift, and go to state 41

    $default  reduce using rule 23 (simple_exp)


State 27

   26 term: factor .

    $default  reduce using rule 26 (term)


State 28

   30 factor: variable .

    $default  reduce using rule 30 (factor)


State 29

   14 stmt: READ LPAREN . variable RPAREN SEMI

    ID  shift, and go to state 11

    variable  go to state 42


State 30

   15 stmt: WRITE LPAREN . variable RPAREN SEMI

    ID  shift, and go to state 11

    variable  go to state 43


State 31

   12 stmt: WHILE exp . DO stmt

    DO  shift, and go to state 44


State 32

    8 stmt_seq: stmt_seq . stmt
   17 block: LBRACE stmt_seq . RBRACE

    ID      shift, and go to state 11
    IF      shift, and go to state 12
    READ    shift, and go to state 13
    WRITE   shift, and go to state 14
    WHILE   shift, and go to state 15
    LBRACE  shift, and go to state 16
    RBRACE  shift, and go to state 45

    stmt      go to state 17
    block     go to state 18
    variable  go to state 19


State 33

   13 stmt: variable ASSIGN . exp SEMI

    ID         shift, and go to state 11
    LPAREN     shift, and go to state 21
    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23

    exp         go to state 46
    simple_exp  go to state 25
    term        go to state 26
    factor      go to state 27
    variable    go to state 28


State 34

   27 factor: LPAREN exp . RPAREN

    RPAREN  shift, and go to state 47


State 35

   10 stmt: IF exp THEN . stmt
   11     | IF exp THEN . stmt ELSE stmt

    ID      shift, and go to state 11
    IF      shift, and go to state 12
    READ    shift, and go to state 13
    WRITE   shift, and go to state 14
    WHILE   shift, and go to state 15
    LBRACE  shift, and go to state 16

    stmt      go to state 48
    block     go to state 18
    variable  go to state 19


State 36

   18 exp: simple_exp LT . simple_exp

    ID         shift, and go to state 11
    LPAREN     shift, and go to state 21
    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23

    simple_exp  go to state 49
    term        go to state 26
    factor      go to state 27
    variable    go to state 28


State 37

   19 exp: simple_exp EQ . simple_exp

    ID         shift, and go to state 11
    LPAREN     shift, and go to state 21
    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23

    simple_exp  go to state 50
    term        go to state 26
    factor      go to state 27
    variable    go to state 28


State 38

   21 simple_exp: simple_exp PLUS . term

    ID         shift, and go to state 11
    LPAREN     shift, and go to state 21
    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23

    term      go to state 51
    factor    go to state 27
    variable  go to state 28


State 39

   22 simple_exp: simple_exp MINUS . term

    ID         shift, and go to state 11
    LPAREN     shift, and go to state 21
    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23

    term      go to state 52
    factor    go to state 27
    variable  go to state 28


State 40

   24 term: term TIMES . factor

    ID         shift, and go to state 11
    LPAREN     shift, and go to state 21
    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23

    factor    go to state 53
    variable  go to state 28


State 41

   25 term: term DIV . factor

    ID         shift, and go to state 11
    LPAREN     shift, and go to state 21
    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23

    factor    go to state 54
    variable  go to state 28


State 42

   14 stmt: READ LPAREN variable . RPAREN SEMI

    RPAREN  shift, and go to state 55


State 43

   15 stmt: WRITE LPAREN variable . RPAREN SEMI

    RPAREN  shift, and go to state 56


State 44

   12 stmt: WHILE exp DO . stmt

    ID      shift, and go to state 11
    IF      shift, and go to state 12
    READ    shift, and go to state 13
    WRITE   shift, and go to state 14
    WHILE   shift, and go to state 15
    LBRACE  shift, and go to state 16

    stmt      go to state 57
    block     go to state 18
    variable  go to state 19


State 45

   17 block: LBRACE stmt_seq RBRACE .

    $default  reduce using rule 17 (block)


State 46

   13 stmt: variable ASSIGN exp . SEMI

    SEMI  shift, and go to state 58


State 47

   27 factor: LPAREN exp RPAREN .

    $default  reduce using rule 27 (factor)


State 48

   10 stmt: IF exp THEN stmt .
   11     | IF exp THEN stmt . ELSE stmt

    ELSE  shift, and go to state 59

    ELSE      [reduce using rule 10 (stmt)]
    $default  reduce using rule 10 (stmt)


State 49

   18 exp: simple_exp LT simple_exp .
   21 simple_exp: simple_exp . PLUS term
   22           | simple_exp . MINUS term

    PLUS   shift, and go to state 38
    MINUS  shift, and go to state 39

    $default  reduce using rule 18 (exp)


State 50

   19 exp: simple_exp EQ simple_exp .
   21 simple_exp: simple_exp . PLUS term
   22           | simple_exp . MINUS term

    PLUS   shift, and go to state 38
    MINUS  shift, and go to state 39

    $default  reduce using rule 19 (exp)


State 51

   21 simple_exp: simple_exp PLUS term .
   24 term: term . TIMES factor
   25     | term . DIV factor

    TIMES  shift, and go to state 40
    DIV    shift, and go to state 41

    $default  reduce using rule 21 (simple_exp)


State 52

   22 simple_exp: simple_exp MINUS term .
   24 term: term . TIMES factor
   25     | term . DIV factor

    TIMES  shift, and go to state 40
    DIV    shift, and go to state 41

    $default  reduce using rule 22 (simple_exp)


State 53

   24 term: term TIMES factor .

    $default  reduce using rule 24 (term)


State 54

   25 term: term DIV factor .

    $default  reduce using rule 25 (term)


State 55

   14 stmt: READ LPAREN variable RPAREN . SEMI

    SEMI  shift, and go to state 60


State 56

   15 stmt: WRITE LPAREN variable RPAREN . SEMI

    SEMI  shift, and go to state 61


State 57

   12 stmt: WHILE exp DO stmt .

    $default  reduce using rule 12 (stmt)


State 58

   13 stmt: variable ASSIGN exp SEMI .

    $default  reduce using rule 13 (stmt)


State 59

   11 stmt: IF exp THEN stmt ELSE . stmt

    ID      shift, and go to state 11
    IF      shift, and go to state 12
    READ    shift, and go to state 13
    WRITE   shift, and go to state 14
    WHILE   shift, and go to state 15
    LBRACE  shift, and go to state 16

    stmt      go to state 62
    block     go to state 18
    variable  go to state 19


State 60

   14 stmt: READ LPAREN variable RPAREN SEMI .

    $default  reduce using rule 14 (stmt)


State 61

   15 stmt: WRITE LPAREN variable RPAREN SEMI .

    $default  reduce using rule 15 (stmt)


State 62

   11 stmt: IF exp THEN stmt ELSE stmt .

    $default  reduce using rule 11 (stmt)
